{"ast":null,"code":"var _jsxFileName = \"/Users/mathieubaurin/Documents/Cryptocurrency-App/src/components/Cryptocurrencies.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\nimport { useGetCryptosQuery } from '../services/cryptoApi';\n\nconst Cryptocurrencies = _ref => {\n  let {\n    simplified\n  } = _ref;\n  const count = simplified ? 10 : 100;\n  const {\n    data: cryptosList,\n    isFetching\n  } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState();\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    var _cryptosList$data, _cryptosList$data2;\n\n    setCryptos(cryptosList === null || cryptosList === void 0 ? void 0 : (_cryptosList$data = cryptosList.data) === null || _cryptosList$data === void 0 ? void 0 : _cryptosList$data.coins);\n    const filteredData = cryptosList === null || cryptosList === void 0 ? void 0 : (_cryptosList$data2 = cryptosList.data) === null || _cryptosList$data2 === void 0 ? void 0 : _cryptosList$data2.coins.filter(item => item.name.toLowerCase().includes(searchTerm));\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n  if (isFetching) return /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 26\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !simplified && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-crypto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Search Cryptocurrency\",\n    onChange: e => setSearchTerm(e.target.value.toLowerCase()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    gutter: [32, 32],\n    className: \"crypto-card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, cryptos === null || cryptos === void 0 ? void 0 : cryptos.map(currency => /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 12,\n    lg: 6,\n    className: \"crypto-card\",\n    key: currency.uuid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    key: currency.uuid,\n    to: `/crypto/${currency.uuid}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: `${currency.rank}. ${currency.name}`,\n    extra: /*#__PURE__*/React.createElement(\"img\", {\n      className: \"crypto-image\",\n      src: currency.iconUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 24\n      }\n    }),\n    hoverable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Price: \", millify(currency.price)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Market Cap: \", millify(currency.marketCap)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Daily Change: \", currency.change, \"%\")))))));\n};\n\nexport default Cryptocurrencies;","map":{"version":3,"sources":["/Users/mathieubaurin/Documents/Cryptocurrency-App/src/components/Cryptocurrencies.jsx"],"names":["React","useEffect","useState","millify","Link","Card","Row","Col","Input","useGetCryptosQuery","Cryptocurrencies","simplified","count","data","cryptosList","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","coins","filteredData","filter","item","name","toLowerCase","includes","e","target","value","map","currency","uuid","rank","iconUrl","price","marketCap","change"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    setCryptos(cryptosList?.data?.coins);\n\n    const filteredData = cryptosList?.data?.coins.filter((item) => item.name.toLowerCase().includes(searchTerm));\n\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={(e) => setSearchTerm(e.target.value.toLowerCase())}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col\n            xs={24}\n            sm={12}\n            lg={6}\n            className=\"crypto-card\"\n            key={currency.uuid}\n          >\n\n            {/* Note: Change currency.id to currency.uuid  */}\n            <Link key={currency.uuid} to={`/crypto/${currency.uuid}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\n                hoverable\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {currency.change}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;"]},"metadata":{},"sourceType":"module"}