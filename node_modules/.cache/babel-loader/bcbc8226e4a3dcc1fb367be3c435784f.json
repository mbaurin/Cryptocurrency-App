{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.roundTo = exports.parseValue = void 0;\n/**\n * parseValue ensures the value is a number and within accepted range.\n */\n\nfunction parseValue(value) {\n  const val = parseFloat(value.toString());\n\n  if (isNaN(val)) {\n    throw new Error(`Input value is not a number`);\n  }\n\n  if (val > Number.MAX_SAFE_INTEGER || val < Number.MIN_SAFE_INTEGER) {\n    throw new RangeError(\"Input value is outside of safe integer range\");\n  }\n\n  return val;\n}\n\nexports.parseValue = parseValue;\n/**\n * Rounds a number [value] up to a specified [precision].\n */\n\nfunction roundTo(value, precision) {\n  if (!Number.isFinite(value)) {\n    throw new Error(\"Input value is not a finite number\");\n  }\n\n  if (!Number.isInteger(precision) || precision < 0) {\n    throw new Error(\"Precision is not a positive integer\");\n  }\n\n  if (Number.isInteger(value)) {\n    return value;\n  }\n\n  return parseFloat(value.toFixed(precision));\n}\n\nexports.roundTo = roundTo;","map":null,"metadata":{},"sourceType":"script"}