{"ast":null,"code":"var _jsxFileName = \"/Users/mbaurin/Documents/Cryptocurrency-App/src/components/CryptoDetails.jsx\";\nimport React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\nimport { useGetCryptoDetailsQuery } from '../services/cryptoApi';\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\n\nconst CryptoDetails = () => {\n  const {\n    coinId\n  } = useParams();\n  const [timePeriod, setTimePeriod] = useState('7d');\n  const {\n    data,\n    isFetching\n  } = useGetCryptoDetailsQuery(coinId); //console.log(data);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, \"CryptoDetails \", coinId);\n};\n\nexport default CryptoDetails;","map":{"version":3,"sources":["/Users/mbaurin/Documents/Cryptocurrency-App/src/components/CryptoDetails.jsx"],"names":["React","useState","HTMLReactParser","useParams","millify","Col","Row","Typography","Select","MoneyCollectOutlined","DollarCircleOutlined","FundOutlined","ExclamationCircleOutlined","StopOutlined","TrophyOutlined","CheckOutlined","NumberOutlined","ThunderboltOutlined","useGetCryptoDetailsQuery","Title","Text","Option","CryptoDetails","coinId","timePeriod","setTimePeriod","data","isFetching"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,EAA+BC,MAA/B,QAA6C,MAA7C;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,EAAqDC,YAArD,EAAmEC,yBAAnE,EAA8FC,YAA9F,EAA4GC,cAA5G,EAA4HC,aAA5H,EAA2IC,cAA3I,EAA2JC,mBAA3J,QAAsL,mBAAtL;AAEA,SAASC,wBAAT,QAAyC,uBAAzC;AAEA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAkBb,UAAxB;AACA,MAAM;AAAEc,EAAAA;AAAF,IAAab,MAAnB;;AAEA,MAAMc,aAAa,GAAG,MAAM;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAapB,SAAS,EAA5B;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM;AAAEyB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBT,wBAAwB,CAACK,MAAD,CAArD,CAH0B,CAK1B;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACmBA,MADnB,CADF;AAKD,CAZD;;AAcA,eAAeD,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery } from '../services/cryptoApi';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState('7d');\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n\n  //console.log(data);\n  \n  return (\n    <div>\n        CryptoDetails {coinId}\n    </div>\n    );\n};\n\nexport default CryptoDetails;"]},"metadata":{},"sourceType":"module"}